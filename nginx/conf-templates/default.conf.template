events {
    worker_connections  4096;  ## Default: 1024
}

http {
    include    conf/mime.types;
    include    /etc/nginx/proxy.conf;
    include    /etc/nginx/fastcgi.conf;

    server {
        listen          80;
        server_name     ${DOMAIN};
        access_log      logs/${DOMAIN}.log main;

        # TODO evaluate security and look at example kong file in supabase repo
        location /auth/v1 {
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '${CORS_ORIGINS}';
                add_header 'Access-Control-Allow-Methods' '${CORS_METHODS}';
                #
                # Custom headers and headers various browsers *should* be OK with but aren't
                #
                add_header 'Access-Control-Allow-Headers' '${CORS_HEADERS}';
                #
                # Tell client that this pre-flight info is valid for 20 days
                #
                add_header 'Access-Control-Max-Age' 86400;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            } else {
                add_header 'Access-Control-Allow-Origin' '${CORS_ORIGINS}' always;
                add_header 'Access-Control-Allow-Methods' '${CORS_METHODS}' always;
                add_header 'Access-Control-Allow-Headers' '${CORS_HEADERS}' always;
                add_header 'Access-Control-Expose-Headers' '*' always;
                proxy_pass http://${GOTRUE_CONTAINER_IP}:${GOTRUE_CONTAINER_PORT};
            }

            # TODO Cors because GoTrue dosen't add them
        }

        location /rest/v1 {
            proxy_pass      https://${SUPABASE_URL}/rest/v1;
        }

        location /realtime/v1 {
            proxy_pass      https://${SUPABASE_URL}/realtime/v1;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
        }

        location /storage/v1 {
            proxy_pass      https://${SUPABASE_URL}/storage/v1;
        }

        location /pg {
            proxy_pass      https://${SUPABASE_URL}/pg;
        }
    }
}
